language: cpp

matrix:
  include:
 
    # base system, lowest denominator
    - os: linux
      dist: trusty
      env: TRAVIS_DIST_NAME=trusty QT_BASE=55 CXX_COMPILER=g++-4.9 C_COMPILER=gcc-4.9 BUILD_TYPE=Release
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
         
    # Ubuntu 16.04
    - os: linux
      dist: xenial
      env: TRAVIS_DIST_NAME=xenial CXX_COMPILER=g++ C_COMPILER=gcc BUILD_TYPE=Release
      addons:
        apt:
          packages:
          - qt5-default
          - qtmultimedia5-dev
          - qttools5-dev-tools
          
before_install:
  - if [ "$QT_BASE" = "55"  ]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty                -y; sudo apt-get update -qq ; fi
  - if [ "$QT_BASE" = "510" ]; then sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-$TRAVIS_DIST_NAME -y; sudo apt-get update -qq ; fi
  - if [ "$QT_BASE" = "512" ]; then sudo add-apt-repository ppa:beineri/opt-qt-5.12.3-$TRAVIS_DIST_NAME -y; sudo apt-get update -qq ; fi

install:
  # Qt
  - if [ "$QT_BASE" = "55"  ]; then sudo apt-get install -qq qt55base  qt55multimedia  qt55translations  qt55tools  ; source /opt/qt55/bin/qt55-env.sh   ; export QTHOME=/opt/qt55  ; fi
  - if [ "$QT_BASE" = "510" ]; then sudo apt-get install -qq qt510base qt510multimedia qt510translations qt510tools ; source /opt/qt510/bin/qt510-env.sh ; export QTHOME=/opt/qt510 ; fi
  - if [ "$QT_BASE" = "512" ]; then sudo apt-get install -qq qt512base qt512multimedia qt512translations qt512tools ; source /opt/qt512/bin/qt512-env.sh ; export QTHOME=/opt/qt512 ; fi

  # cmake
  - curl -o cmake.tar.gz -O https://cmake.org/files/v3.15/cmake-3.15.5-Linux-x86_64.tar.gz
  - mkdir /opt/cmake
  - tar -xf cmake.tar.gz -C /opt/cmake --strip-components=1
  - rm -f cmake.tar.gz
  - export PATH=/opt/cmake/bin:${PATH}

before_script:
  - cmake --version
  - ${CXX_COMPILER} --version
  - ${C_COMPILER} --version
  - cmake -B build -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

script:
  - cmake --build build
